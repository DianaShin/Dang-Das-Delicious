mixin storeForm(store = {})
  form(action=`/add/${store._id ? store._id : ''}` method='POST' class='card' enctype="multipart/form-data")
    //- multipart/form-data won't send data earlier, because we hadn't required multer so that express could handle multipart/form-data
    label(for='name') Name 
    input(type='text' name='name' value=store.name)
    label(for='description') Description
    textarea(name='description')= store.description
    //- Image upload 
    label(for='photo') Photo 
      input(type='file' name='photo' id='photo' accept='image/gif, image/png, image/jpeg')
      if store.photo 
        img(src=`/uploads/${store.photo}` alt=store.name width=200)
    //- address, lng and lat 
    label(for="address") Address
    input(type="text" id="address" name="location[address]" value=(store.location ? store.location.address : ''))
    label(for="lng") Address Lng
    input(type="text" id="lng" name="location[coordinates][0]" value=(store.location && store.location.coordinates[0]) required)
    label(for="lat") Address Lat
    input(type="text" id="lat" name="location[coordinates][1]" value=(store.location && store.location.coordinates[1]) required)
    //- 'name' attribute must match the property names used in the Schema
    - const choices = ['Wifi', 'Open Late', 'Family Friendly', 'Vegetarian', 'Licensed']
    //- the - indicates to Pug that we are writing JS
    - const tags = store.tags || [] 
    ul.tags
      each choice in choices
        .tag.tag__choice
          input(type='checkbox' id=choice value=choice name="tags" checked=(tags.includes(choice)))
          //- the parantheses after checked allow us to put JS inside pug
          label(for=choice)= choice
          //- label(for=choice) #{choice}
    input(type='submit' value=(store._id ? 'Edit →' : 'Save →') class='button')
  p It works! #{store.name}
